<?xml version="1.0" encoding="UTF-8"?><widget version=1.0>   <debug>off</debug>   <!--       NetPulse 1.1      Design/Code: Mihai Parparita/Mscape Software/mihai@mscape.com    -->   	<window title="NetPulse">		<name>main_window</name>		<width>180</width>		<height>180</height>		<opacity>255</opacity>		<visible>0</visible>		<shadow>1</shadow>		<option>allowCustomObjectAttributes</option>	</window>		<!-- traffic UI -->	<image src="Resources/loading.tif" name="chart" hOffset="0" vOffset="0"/>		<image src="Resources/en0.off.tif" name="en0" hOffset="0" vOffset="127">		<onMouseUp>			SwitchInterface("en0");		</onMouseUp>	</image>		<image src="Resources/en1.off.tif" name="en1" hOffset="32" vOffset="127">		<onMouseUp>			SwitchInterface("en1");		</onMouseUp>	</image>		<image src="Resources/ppp0.off.tif" name="ppp0" hOffset="64" vOffset="127">		<onMouseUp>			SwitchInterface("ppp0");		</onMouseUp>	</image>		<!-- about -->	<about-box>		<image>Resources/about.png</image>	</about-box>		<!-- preferences -->	<preference name="interfacePref">		<hidden>true</hidden>		<type>text</type>		<defaultValue>en0</defaultValue>	</preference>		<preference name="tabsPref">		<type>popup</type>		<title>Tabs Position:</title>		<option>Top</option>		<option>Bottom</option>		<option>Left</option>		<option>Right</option>		<defaultValue>Bottom</defaultValue>	</preference>		<preference name="totalPref">		<type>checkbox</type>		<title>Show Total Traffic</title>		<defaultValue>1</defaultValue>	</preference>		<preference name="inboundPref">		<type>checkbox</type>		<title>Show Inbound Traffic</title>		<defaultValue>1</defaultValue>	</preference>		<preference name="outboundPref">		<type>checkbox</type>		<title>Show Outbound Traffic</title>		<defaultValue>1</defaultValue>	</preference>				<!-- code -->	<action trigger="onTimer" interval="1">		if (!paused)		{			chart.src = "output.tif";			chart.reload();			main_window.recalcShadow();		}        	        if (keepAliveTimerCount % 5 == 0)        	KeepAliveDaemon();        keepAliveTimerCount++;    </action>    	<action trigger="onLoad">		// general globals		var currentInterface = "";				// traffic globals		var paused = true;		var keepAliveTimerCount = 0;		var showTotal = 0;		var showInbound = 0;		var showOutbound = 0;				// pseudo constants		var kTabWidth = 31;		var kTabHeight = 22;		var kTabSpacing = 3;		var kChartHeight = 128;		var kChartWidth = 128;				function HideButtons()		{			en0.opacity = en1.opacity = ppp0.opacity = 0;			main_window.recalcShadow();		}				function ShowButtons()		{			en0.opacity = en1.opacity = ppp0.opacity = 255;			main_window.recalcShadow();		}				function CenterForRotation(tab)		{			tab.hRegistrationPoint = tab.hOffset + kTabWidth/2;			tab.vRegistrationPoint = tab.vOffset + kTabHeight/2;		}				function UpdateTabs()		{			switch (preferences.tabsPref.value)			{				case "Top":					initialX = kTabHeight + kTabWidth + 2;					initialY = -(kTabHeight + 1);					deltaX = kTabWidth + kTabSpacing;					deltaY = 0;					rotation = 180;					break;				case "Bottom":					initialX = kTabHeight;					initialY = kTabHeight + kChartHeight - 1;					deltaX = kTabWidth + kTabSpacing;					deltaY = 0;					rotation = 0;					break;				case "Left":					initialX = 1;					initialY = -2;					deltaX = 0;					deltaY = kTabWidth + kTabSpacing;					rotation = 90;					break;				case "Right":					initialX = 2 * kTabHeight + kChartWidth + 1;					initialY = kTabWidth;					deltaX = 0;					deltaY = kTabWidth + kTabSpacing;					rotation = 270;					break;			}						// move the widgets			en0.hOffset = initialX;			en0.vOffset = initialY;						en1.hOffset = initialX + deltaX;			en1.vOffset = initialY + deltaY;						ppp0.hOffset = initialX + deltaX * 2;			ppp0.vOffset = initialY + deltaY * 2;						en0.rotation = en1.rotation = ppp0.rotation = rotation;					}				function SwitchInterface(newInterface)		{			paused = true;					LaunchDaemon(newInterface);						suppressUpdates();					if (currentInterface != "")			{				chart.src = "Resources/switching.tif";					eval(currentInterface).src = "Resources/" + currentInterface + ".off.tif";			}							eval(newInterface).src = "Resources/" + newInterface + ".on.tif";						resumeUpdates();						updateNow();			main_window.recalcShadow();						currentInterface = newInterface;			preferences.interfacePref.value = newInterface;			sleep(2000);			paused = false;		}				function KeepAliveDaemon()		{			runCommand('touch keepalive.gif');		}				function LaunchDaemon(networkInterface)		{			var charts = " ";						if (showTotal != 0) charts += "-total ";			if (showInbound != 0) charts += "-inbound ";			if (showOutbound != 0) charts += "-outbound ";						runCommand("./NetPulseDaemon -I " + networkInterface + charts);		}				if (main_window.hOffset == -1)		{			main_window.hOffset = screen.availLeft + screen.availWidth/2 - 90;			main_window.vOffset = screen.availTop + screen.availHeight/2 - 90;		}				// leave room for tabs in the top and left positions		chart.vOffset = chart.hOffset = kTabHeight;				UpdateTabs();				showTotal = preferences.totalPref.value;		showInbound = preferences.inboundPref.value;		showOutbound = preferences.outboundPref.value;				main_window.visible = true;				KeepAliveDaemon();		SwitchInterface(preferences.interfacePref.value);		</action>		<action trigger="onPreferencesChanged">		UpdateTabs();		if (showTotal != preferences.totalPref.value ||			showInbound != preferences.inboundPref.value ||			showOutbound != preferences.outboundPref.value)		{			showTotal = preferences.totalPref.value;			showInbound = preferences.inboundPref.value;			showOutbound = preferences.outboundPref.value;						KeepAliveDaemon();			SwitchInterface(preferences.interfacePref.value);		}		</action>		<action trigger="onGainFocus">		ShowButtons();	</action>		<action trigger="onLoseFocus">		HideButtons();	</action>		<action trigger="onWakeFromSleep">		KeepAliveDaemon();		SwitchInterface(preferences.interfacePref.value);	</action></widget>