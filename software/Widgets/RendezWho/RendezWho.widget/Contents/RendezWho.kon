<?xml version="1.0" encoding="UTF-8"?><widget version=1.0>   <debug>off</debug>   <option>allowCustomObjectAttributes</option>   <!--       RendezWho Widget      Design/Code: Mihai Parparita/Mscape Software/mihai@mscape.com    -->   	<window title="RendezWho">		<name>mainWindow</name>		<width>215</width>		<height>300</height>		<opacity>255</opacity>		<visible>0</visible>		<shadow>1</shadow>		<level>topMost</level>	</window>		<!-- images -->	<image name="title" src="Resources/title.png" hOffset="0" vOffset="0"/>		<!-- code -->	<action trigger="onTimer" interval="60">		Refresh();    </action>        <!-- preferences -->    <preference name="levelPref">		<type>popup</type>		<title>Widget Position:</title>		<option>Below Everything</option>		<option>Normal</option>		<option>Above Everything</option>		<defaultValue>Normal</defaultValue>	</preference>		<preference name="suffixPref">		<type>text</type>		<title>Address Suffix:</title>		<defaultValue>.princeton.edu</defaultValue>	</preference>    	<action trigger="onLoad">		// globals		var items = new Array();		var addressSuffix = preferences.suffixPref.value;				// pseudo constants		var kItemsStartX = 0;		var kItemsStartY = 22;		var kItemHeight = 21;		var kTextOffsetX = 3;		var kTextOffsetY = 12;				var kRendezPort = "3689";		var kLocalField = 3;		var kRemoteField = 4;		var kStatusField = 5;				var kNoHostsConnectedMessage = "No connected users.";				function UpdateLevel()		{			switch (preferences.levelPref.value)			{				case "Below Everything": mainWindow.level = "below"; break;				case "Normal": mainWindow.level = "normal"; break;				case "Above Everything": mainWindow.level = "topMost"; break;								}		}				function AddItem(hostAddress, hostName, rendezvousName)		{			var newImage = new Image();			var newText = new Text();						newImage.src = 'Resources/' + items.length + '.png';			newImage.hOffset = kItemsStartX;			newImage.vOffset = kItemsStartY + kItemHeight * items.length;			newImage.onMouseUp = "ToggleDisplay(" + items.length + ")";						newText.hOffset = kItemsStartX + kTextOffsetX;			newText.vOffset = kItemsStartY + kItemHeight * items.length + kTextOffsetY;			newText.data = hostName;			newText.color = "#FFFFFF";			newText.font = "Trebuchet MS";			newText.size = 12;			newText.onMouseUp = "ToggleDisplay(" + items.length + ")";						newText.labels = new Array();			newText.labels.push(hostAddress);			newText.labels.push(hostName);			newText.labels.push(rendezvousName);			newText.labelsIndex = 1;								newImage.text = newText;						items.push(newImage);		}				function ToggleDisplay(index)		{			suppressUpdates();						var text = items[index].text;						text.labelsIndex++; if (text.labelsIndex > 2) text.labelsIndex = 0;						if (text.labelsIndex == 2 && text.labels[2] == "")			{				text.style = "italic";				text.data = "Rendezvous sharing disabled";			}			else			{				text.style = "normal";				text.data = text.labels[text.labelsIndex];			}						resumeUpdates();			mainWindow.recalcShadow();		}				function LookupHost(address)		{			var out = runCommand("host " + address);			var outFields = out.split(" ");						return outFields[outFields.length - 1].toLowerCase().replace(addressSuffix, "");		}				function GetRendezvousName(address)		{			var out = runCommand("./getRendezvousName.pl " + address);						return out;		}				function Refresh()		{			var netstatOut = runCommand("netstat -f inet -n -p tcp -W | grep 3689");			var netstatLines = netstatOut.split("\n");			var hosts = new Array();						for (var i=0; i &lt; netstatLines.length; i++)			{								var rawFields = netstatLines[i].split(" ");				var fields = new Array();											if (fields.length &lt;= 0) continue;								for (var j=0; j &lt; rawFields.length; j++)					if (rawFields[j] != "")						fields.push(rawFields[j]);								if (fields[kLocalField].indexOf(kRendezPort) != -1 && fields[kStatusField] == "ESTABLISHED")				{					var found = false;					var host = fields[kRemoteField].substring(0, fields[4].lastIndexOf("."));										for (var j=0; j &lt; hosts.length; j++)						if (hosts[j] == host)						{							found = true;							break;						}										if (!found)						hosts.push(host);					}			}						suppressUpdates();						for (var i=0; i &lt; items.length; i++)			{				delete items[i].text;				delete items[i];			}						delete items;			if (hosts.length &gt; 0)			{				items = new Array();								for (var i=0; i &lt; hosts.length; i++)					AddItem(hosts[i],							LookupHost(hosts[i]),							GetRendezvousName(hosts[i]));			}			else			{				AddItem(kNoHostsConnectedMessage,						kNoHostsConnectedMessage,						kNoHostsConnectedMessage);			}									resumeUpdates();			mainWindow.recalcShadow();					}				if (mainWindow.hOffset == -1)		{			mainWindow.hOffset = screen.availLeft + screen.availWidth/2 - 90;			mainWindow.vOffset = screen.availTop + screen.availHeight/2 - 90;		}				UpdateLevel();		Refresh();				mainWindow.visible = true;	</action>		<action trigger="onPreferencesChanged">		UpdateLevel();		addressSuffix = preferences.suffixPref.value;		Refresh();	</action>		</widget>